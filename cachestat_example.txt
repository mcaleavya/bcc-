usage: cachestat [-h] [-i INTERVAL] [-T] [-L]

show Linux page cache hit/miss statistics including read and write hit %

optional arguments:
  -h, --help            show this help message and exit
  -i INTERVAL, --interval INTERVAL
                        summary interval, seconds
  -T, --timestamp       include timestamp on output
  -L, --latency         include latency historgrams on output experimental

examples:
    ./cachestat -i 1        # print every second hit/miss stats
    ./cachestat -L -i 1     # show latency for each function access
    ./cachestat -T -i 1     # include timestamps

[root@localhost bcc]# ./cachestat
    HITS   MISSES  DIRTIES READ HIT% WRITE HIT%   BUFFERS_MB  CACHED_MB
       0        0        0     0.0%     0.0%            0        134
       0        0        0     0.0%     0.0%            0        134
       0        0        0     0.0%     0.0%            0        134
       0        0        0     0.0%     0.0%            0        134
     709        0        0   100.0%     0.0%            0        126
     241        0        0   100.0%     0.0%            0        126
    1666     3332     1666     0.0%    33.3%            0        132
     898      768      384    30.9%    23.0%            0        134
       0        0        0     0.0%     0.0%            0        134
       0        0        0     0.0%     0.0%            0        134
       0        0        0     0.0%     0.0%            0        134

[root@localhost bcc]# ./cachestat -T 
TIME         HITS   MISSES  DIRTIES READ HIT% WRITE HIT%   BUFFERS_MB  CACHED_MB
21:53:49        0        0        0     0.0%     0.0%            0        134
21:53:50        0        0        0     0.0%     0.0%            0        134
21:53:51      708        0        0   100.0%     0.0%            0        126
21:53:52     1916     3832     1916     0.0%    33.3%            0        133
21:53:53      619      268      134    54.7%    15.1%            0        134
21:53:54      720        0        0   100.0%     0.0%            0        126
21:53:55      241        0        0   100.0%     0.0%            0        126
21:53:56     1734     3468     1734     0.0%    33.3%            0        132
21:53:57      818      632      316    34.6%    21.8%            0        134
21:53:58        0        0        0     0.0%     0.0%            0        134
21:53:59        0        0        0     0.0%     0.0%            0        134

We can see that we have 2050 entries in the Dirty column, this was generated as follows. 

[root@localhost ~]# dd if=/dev/urandom of=/root/allas bs=8192 count=1025
1025+0 records in
1025+0 records out
8396800 bytes (8.4 MB) copied, 1.06047 s, 7.9 MB/s

the value 8396800 / PAGESIZE(4096) = 2050

Below shows an example of the histogram showing how long each function took from entry to return in usecs.

[root@localhost bcc]# ./cachestat -L
Latency Histogram for Page Cache Function Access

Function = account_page_dirtied
     usecs               : count     distribution
         0 -> 1          : 0        |                                        |
         2 -> 3          : 0        |                                        |
         4 -> 7          : 13       |****************************************|
         8 -> 15         : 2        |******                                  |

Function = add_to_page_cache_lru
     usecs               : count     distribution
         0 -> 1          : 0        |                                        |
         2 -> 3          : 0        |                                        |
         4 -> 7          : 0        |                                        |
         8 -> 15         : 1        |****************************************|

Function = add_to_page_cache_lru
     usecs               : count     distribution
         0 -> 1          : 0        |                                        |
         2 -> 3          : 305      |****************************************|
         4 -> 7          : 120      |***************                         |
         8 -> 15         : 12       |*                                       |
        16 -> 31         : 9        |*                                       |
        32 -> 63         : 2        |                                        |

Function = mark_page_accessed
     usecs               : count     distribution
         0 -> 1          : 154      |*******************                     |
         2 -> 3          : 312      |****************************************|
         4 -> 7          : 34       |****                                    |
         8 -> 15         : 7        |                                        |
        16 -> 31         : 3        |                                        |
        32 -> 63         : 0        |                                        |
        64 -> 127        : 3        |                                        |

Function = add_to_page_cache_lru
     usecs               : count     distribution
         0 -> 1          : 0        |                                        |
         2 -> 3          : 283      |****************************************|
         4 -> 7          : 38       |*****                                   |
         8 -> 15         : 1        |                                        |
        16 -> 31         : 6        |                                        |

Function = mark_page_accessed
     usecs               : count     distribution
         0 -> 1          : 647      |****************************************|
         2 -> 3          : 172      |**********                              |
         4 -> 7          : 8        |                                        |
         8 -> 15         : 2        |                                        |
        16 -> 31         : 2        |                                        |
        32 -> 63         : 3        |                                        |
        64 -> 127        : 1        |                                        |
